{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-30T19:56:44.174Z",
    "end": "2022-11-30T19:57:00.475Z",
    "duration": 16301,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "943f21ce-99a0-4971-9f1a-c00a2a584189",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc82a0ab-d4a0-49f7-a9ef-15e8dfb156a0",
          "title": "test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 6791,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  article: {\n    tagList: [],\n    title: \"some title\",\n    description: \"some description\",\n    body: \"some body\"\n  }\n};\ncy.get(\"@token\").then(token => {\n  cy.request({\n    url: Cypress.env(\"apiUrl\") + \"/api/articles/\",\n    headers: {\n      Authorization: \"Token \" + token\n    },\n    method: \"POST\",\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains(\"Global Feed\").click();\n  cy.get(\".article-preview\").first().click();\n  cy.get(\".article-actions\").contains(\"Delete Article\").click();\n  cy.request({\n    url: Cypress.env(\"apiUrl\") + \"/api/articles?limit=10&offset=0\",\n    headers: {\n      Authorization: \"Token \" + token\n    },\n    method: \"GET\"\n  }).its(\"body\").then(body => {\n    cy.wait(20);\n    expect(body.articles[0].title).not.to.equal(\"some title\");\n  });\n});",
              "err": {},
              "uuid": "ef0702c8-227e-41d6-8214-7bb8dafb3e0d",
              "parentUUID": "fc82a0ab-d4a0-49f7-a9ef-15e8dfb156a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef0702c8-227e-41d6-8214-7bb8dafb3e0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6791,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}